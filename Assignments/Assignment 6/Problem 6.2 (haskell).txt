module Main (main) where

import Test.HUnit

-- The function brandy implements the rules directly.
brandy :: Bool -> Bool -> Bool -> Bool
brandy l m n = (not l || m) && not(m && n) && (l || n) && (not n && l)

-- The function brandy' implements the simplified formula.
brandy' :: Bool -> Bool -> Bool -> Bool
brandy' l m n = l && m && not n

-- The  function  truthTable  takes  a  function  as  an  argument  and  returns
-- a list where each element is a 4-tuple representing three input
-- values passed to the function followed by the function's result.
truthTable :: (Bool -> Bool -> Bool -> Bool) -> [(Bool, Bool, Bool, Bool)]
truthTable f = 

-- Test  whether  the  two  truth  tables  returned  are  the  same  (which  is
-- not a very sharp test but I do not want to reveal too many details).
-- You may want to add your own test cases...
brandyTests = TestList [ truthTable brandy ~?= truthTable brandy' ]

main = runTestTT brandyTests
